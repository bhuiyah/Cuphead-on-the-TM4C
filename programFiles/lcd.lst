


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Sajid Bhuiyan and Calvin Heischman
    3 00000000         ; Last modification date: 3/26/22
    4 00000000         
    5 00000000         ; Runs on TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these wri
                       tecommand and writedata
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   23 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   24 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   25 00000000         
   26 00000000                 EXPORT           writecommand
   27 00000000                 EXPORT           writedata
   28 00000000         
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000                 THUMB
   31 00000000                 ALIGN
   32 00000000         
   33 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   34 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   35 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   36 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   37 00000000         ; lot of data, the FIFOs are not used when writing
   38 00000000         ; commands, and they are used when writing data.  This
   39 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   40 00000000         ; that is actually being transmitted.
   41 00000000         ; The write command operation waits until all data has b
                       een
   42 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   43 00000000         ; the command, and then waits for the transmission to



ARM Macro Assembler    Page 2 


   44 00000000         ; finish.
   45 00000000         ; The write data operation waits until there is room in 
                       the
   46 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   47 00000000         ; and then adds the data to the transmit FIFO.
   48 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   49 00000000         ; the SSI0 module is not initialized and enabled.
   50 00000000         
   51 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   52 00000000         ; Input: R0  8-bit command to transmit
   53 00000000         ; Output: none
   54 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   55 00000000         writecommand
   56 00000000         ;; --UUU-- Code to write a command to the LCD
   57 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   58 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   59 00000000         ;3) Clear D/C=PA6 to zero
   60 00000000         ;4) Write the command to SSI0_DR_R
   61 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   62 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   63 00000000 B570            PUSH             {R4-R6, LR}
   64 00000002         loop1
   65 00000002 4C13            LDR              R4, =SSI0_SR_R
   66 00000004 6825            LDR              R5, [R4]
   67 00000006 F005 0510       AND              R5, #0x10   ;isolates bit 4
   68 0000000A 2D00            CMP              R5, #0
   69 0000000C D1F9            BNE              loop1
   70 0000000E         
   71 0000000E 4C11            LDR              R4, =GPIO_PORTA_DATA_R ;Set PA6
                                                             to zero to send a 
                                                            command      D = 1,
                                                             C = 0
   72 00000010 6825            LDR              R5,[R4]
   73 00000012 F025 0540       BIC              R5, #0x40
   74 00000016 6025            STR              R5,[R4]
   75 00000018         
   76 00000018 4C0F            LDR              R4, =SSI0_DR_R ;Store command(R
                                                            0) into SSIO_DR_R
   77 0000001A 7020            STRB             R0,[R4]
   78 0000001C         
   79 0000001C         loop2
   80 0000001C 4C0C            LDR              R4, =SSI0_SR_R ;Waits for SSIO_
                                                            SR_R bit 4 to be cl
                                                            eared
   81 0000001E 6825            LDR              R5, [R4]
   82 00000020 F005 0510       AND              R5, #0x10   ;isolates bit 4
   83 00000024 2D00            CMP              R5, #0
   84 00000026 D1F9            BNE              loop2
   85 00000028         
   86 00000028 E8BD 4070       POP              {R4-R6, LR}
   87 0000002C 4770            BX               LR          ;   return
   88 0000002E         ;   return
   89 0000002E         



ARM Macro Assembler    Page 3 


   90 0000002E         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   91 0000002E         ; Input: R0  8-bit data to transmit
   92 0000002E         ; Output: none
   93 0000002E         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   94 0000002E         writedata
   95 0000002E         ;; --UUU-- Code to write data to the LCD
   96 0000002E         ;1) Read SSI0_SR_R and check bit 1, 
   97 0000002E         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
   98 0000002E         ;3) Set D/C=PA6 to one
   99 0000002E         ;4) Write the 8-bit data to SSI0_DR_R
  100 0000002E B570            PUSH             {R4-R6, LR}
  101 00000030         loop3
  102 00000030 4C07            LDR              R4, =SSI0_SR_R
  103 00000032 6825            LDR              R5, [R4]
  104 00000034 F005 0502       AND              R5, #0x02   ;isolates bit 1
  105 00000038 2D00            CMP              R5, #0
  106 0000003A D0F9            BEQ              loop3
  107 0000003C         
  108 0000003C 4C05            LDR              R4, =GPIO_PORTA_DATA_R ;Set PA6
                                                             to zero to send a 
                                                            command      D = 1,
                                                             C = 0
  109 0000003E 6825            LDR              R5,[R4]
  110 00000040 F045 0540       ORR              R5, #0x40
  111 00000044 6025            STR              R5,[R4]
  112 00000046         
  113 00000046 4C04            LDR              R4, =SSI0_DR_R ;Store command(R
                                                            0) into SSIO_DR_R
  114 00000048 6020            STR              R0,[R4]
  115 0000004A         
  116 0000004A E8BD 4070       POP              {R4-R6, LR}
  117 0000004E 4770            BX               LR          ;   return
  118 00000050         
  119 00000050         
  120 00000050         ;***************************************************
  121 00000050         ; This is a library for the Adafruit 1.8" SPI display.
  122 00000050         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  123 00000050         ; ----> http://www.adafruit.com/products/358
  124 00000050         ; as well as Adafruit raw 1.8" TFT display
  125 00000050         ; ----> http://www.adafruit.com/products/618
  126 00000050         ;
  127 00000050         ; Check out the links above for our tutorials and wiring
                        diagrams
  128 00000050         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  129 00000050         ; interface (RST is optional)
  130 00000050         ; Adafruit invests time and resources providing this ope
                       n source code,
  131 00000050         ; please support Adafruit and open-source hardware by pu
                       rchasing
  132 00000050         ; products from Adafruit!
  133 00000050         ;
  134 00000050         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  135 00000050         ; MIT license, all text above must be included in any re



ARM Macro Assembler    Page 4 


                       distribution
  136 00000050         ;****************************************************
  137 00000050         
  138 00000050                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  139 00000050                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_Cuphead -IC:\Users\bhuiy\AppData\Local\
Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\bhuiy\AppData\Local\Arm
\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__UVISION_VERSIO
N SETA 536" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --pred
efine="_RTE_ SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: .text unused
loop1 00000002

Symbol: loop1
   Definitions
      At line 64 in file LCD.s
   Uses
      At line 69 in file LCD.s
Comment: loop1 used once
loop2 0000001C

Symbol: loop2
   Definitions
      At line 79 in file LCD.s
   Uses
      At line 84 in file LCD.s
Comment: loop2 used once
loop3 00000030

Symbol: loop3
   Definitions
      At line 101 in file LCD.s
   Uses
      At line 106 in file LCD.s
Comment: loop3 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 55 in file LCD.s
   Uses
      At line 26 in file LCD.s
Comment: writecommand used once
writedata 0000002E

Symbol: writedata
   Definitions
      At line 94 in file LCD.s
   Uses
      At line 27 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 71 in file LCD.s
      At line 108 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 76 in file LCD.s
      At line 113 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 65 in file LCD.s
      At line 80 in file LCD.s
      At line 102 in file LCD.s

3 symbols
344 symbols in table
